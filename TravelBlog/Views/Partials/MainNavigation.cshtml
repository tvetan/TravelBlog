@inherits UmbracoTemplatePage
@{ 
    var home = Model.Content.AncestorOrSelf(1);
    var children = home.Children.Where(x => x.GetPropertyValue<bool>("showInMainNavigation"));

    
}
@if (children.Any())
{
    @* Get the first page in the children *
    @* Add in level for a CSS hook *@

    <div class="site-navigation-inner col-sm-12">
        <div class="navbar-header">
            <button type="button" class="btn navbar-toggle" data-toggle="collapse" data-target=".navbar-ex1-collapse">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
        </div>
        <div class="collapse navbar-collapse navbar-ex1-collapse">
            <ul id="menu-all-pages" class="nav navbar-nav">
                <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home">
                    <a title="Home" href="/">Home</a>
                </li>
                @foreach (var childPage in children)
                {
                    if (childPage.Children.Any())
                    {

                        <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children dropdown @(childPage.IsAncestorOrSelf((IPublishedContent)CurrentPage) ? "active" : null)">
                            @if (childPage.DocumentTypeAlias == "LandingPage")
                            {
                                <a title="About The Tests" href="@childPage.Url" data-toggle="dropdown" class="dropdown-toggle">@childPage.Name </a>
                                @childPages(childPage.Children)
                            }
                            else
                            {
                                <a href="@childPage.Url">@childPage.Name</a>
                            }
                        </li>
                    }
                    else
                    {
                        <li class="menu-item menu-item-type-post_type menu-item-object-page @(childPage.IsAncestorOrSelf((IPublishedContent)CurrentPage) ? "active" : null)">
                            <a href="@childPage.Url">@childPage.Name</a>
                        </li>
                    }
                }
            </ul>
        </div>


        @{ Html.RenderPartial("_SearchForm", new SimpleSearchModel()); }
    </div>
}

@helper childPages(dynamic pages)
{
    @* Ensure that we have a collection of pages *@
if (pages.Any())
{
    @* Get the first page in pages and get the level *@

    @* Add in level for a CSS hook *@
    <ul class="dropdown-menu" role="menu">
        @foreach (var page in pages)
        {
            <li class="menu-item menu-item-type-post_type menu-item-object-page">
                <a href="@page.Url">@page.Name</a>

                @* if the current page has any children *@
                @if (page.Children.Any())
                {
                    @* Call our helper to display the children *@
                    @childPages(page.Children)
                }
            </li>
        }
    </ul>
}
}